this.JST=this.JST||{},this.JST.aindex=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return'<h1>a) Create a form that saves a blog post to tiny-lasagna-server.\n  The post should have a title and a body. It does not need to display\n   blog posts, just save them.</h1>\n\n<form style="margin-left: 150px;">\n  Title:<br>\n  <input type="text" name="title" size="75">\n  <p>\n  <textarea type="text" name="blog" rows="10" cols="74">\n  </textarea>\n  <p>\n  <input type="submit" value="Save">\n</form>\n'},useData:!0}),this.JST.application=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return"<h1>Hello</h1>\n"},useData:!0}),this.JST.bindex=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return"<h1>b) Create a form for a person. It should have a first name, last name, address, and phone number. It should save the person to tiny-lasagna-server.</h1>\n"},useData:!0}),this.JST.cindex=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return'<h1>c) Create a "blog reading app", where you have a list of blog posts on the side and when you click on a post title, it opens that post in another view. Hint: which blog post is selected is "application state".</h1>\n'},useData:!0}),this.JST.dindex=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return'<h1>d) Create a bookmarking app where you can save URLs. It should have a form where you enter the URL, a title, and a "tag". There should be a list of all the URLs, as well as a list of all the tags (this should be generated dynamically from the link collection). When you click on a tag, the link list should show only those tags. Hint: which tag is selected is "application state", so could appear in your URL and/or have a view model to represent it. You can filter a collection with collection.filter(...), but be aware that it returns an array of models, not a new collection.</h1>\n'},useData:!0}),this.JST.eindex=Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,i){return"<h1>e) Create a complete blog CMS from scratch, allowing you to create, read, update, and delete blog posts.</h1>\n"},useData:!0}),require.register("a",function(e,t,n){"use strict";$(document).ready(function(){$("#container").append(JST.aindex())})}),require.register("b",function(e,t,n){"use strict";$(document).ready(function(){$("#container").append(JST.bindex())})}),require.register("c",function(e,t,n){"use strict";$(document).ready(function(){$("#container").append(JST.cindex())})}),require.register("d",function(e,t,n){"use strict";$(document).ready(function(){$("#container").append(JST.dindex())})}),require.register("e",function(e,t,n){"use strict";$(document).ready(function(){$("#container").append(JST.eindex())})}),require.register("b/models/post",function(e,t,n){"use strict"}),require.register("b/views/index",function(e,t,n){"use strict"}),require.register("c/models/post",function(e,t,n){"use strict"}),require.register("c/views/index",function(e,t,n){"use strict"}),require.register("d/models/post",function(e,t,n){"use strict"}),require.register("d/views/index",function(e,t,n){"use strict"}),require.register("a/models/post",function(e,t,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=Backbone.Model.extend({defaults:function(){return{title:"",name:"",type:"",created_at:Date.now()}},validate:function(e){var t={};return _.isEmpty(e.name)&&(t.name="Must have a valid text entry"),_.keys(t).length?t:void 0}});e["default"]=i,n.exports=e["default"]}),require.register("a/models/posts-collection",function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(e,"__esModule",{value:!0});var a=t("models/post"),r=i(a),s=Backbone.Collection.extend({model:r["default"],url:"http://tiny-lasagna-server.herokuapp.com/collections/posts"});e["default"]=s,n.exports=e["default"]}),require.register("a/views/collection-view",function(e,t,n){"use strict";function i(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(e,"__esModule",{value:!0});var a=t("views/index"),r=i(a);e["default"]=r["default"].extend({initialize:function(){this.listenTo(this.collection,"add remove",this.render)}}),n.exports=e["default"]}),require.register("a/views/index",function(e,t,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=Backbone.View.extend({render:function(){return this.$el.html(this.template()),this},serializeForm:function(){var e={},t=this.$el.serializeArray();return t.forEach(function(t){e[t.name]=t.value}),e}}),n.exports=e["default"]}),require.register("e/models/post",function(e,t,n){"use strict"}),require.register("e/views/index",function(e,t,n){"use strict"});